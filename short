from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.applications.vgg16 import preprocess_input, decode_predictions, VGG16

# Load an image from file
image = img_to_array(load_img('download.jpg', target_size=(224, 224))

# Preprocess the image for the VGG model
image = preprocess_input(image)

# Load the VGG16 model
model = VGG16()

# Predict the probability across all output classes
yhat = model.predict(image.reshape(1, 224, 224, 3))

# Convert the probabilities to class labels
label = decode_predictions(yhat)

# Retrieve the most likely result, e.g., highest probability
label = label[0][0]

# Print the classification
print('%s (%.2f%%)' % (label[1], label[2]*100))
